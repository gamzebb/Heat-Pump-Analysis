[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "your-project" # TODO: Replace with your project name
version = "0.1.0" # TODO: Replace with your version
description = "Your description here" # TODO: Replace with your description
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10"
dependencies = [
    "fastexcel>=0.7.0",
    "requests>=2.28.0",
    "python-dotenv>=0.19.0",
    "pyarrow>=10.0.0",
    "polars>=0.18.0",
    "pandas>=1.5.0",
    "PyYAML>=6.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "black>=22.0",
    "ruff>=0.1.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
]
notebooks = [
    "jupyter>=1.0.0",
    "jupyterlab>=3.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "ipywidgets>=8.0.0",
]
analysis = [
    "scikit-learn>=1.1.0",
    "scipy>=1.9.0",
    "statsmodels>=0.13.0",
    "numpy>=1.23.0",
]
prod = [
    "gunicorn>=20.0.0",
    "uvicorn[standard]>=0.20.0",
]

[tool.setuptools.packages.find]
where = ["src"]
# include = ["your_packages*"]

[tool.setuptools.package-dir]
"" = "src"

[tool.uv.pip]
only-binary = ["pyarrow"]

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312", "py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | venv
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 88
src = ["src", "tests"]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "RUF",  # Ruff-specific rules
    "I",    # isort
    "N",    # pep8-naming
    "ERA",  # eradicate (remove commented code)
    "PL",   # pylint
    "S",    # bandit (security)
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "PLR0913", # too many arguments
    "S101",  # assert used
]
cache-dir = "~/.cache/ruff"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "PLR2004"]  # Allow asserts and magic values in tests

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
namespace_packages = true
explicit_package_bases = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
